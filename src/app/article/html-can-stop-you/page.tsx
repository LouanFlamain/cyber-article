"use client";

import { useEffect, useState } from "react";
import Image from "next/image";

type Section = {
  heading: string;
  content: string;
  items: { title: string; description: string }[];
};

export default function HtmlCanStopYou() {
  const [data, setData] = useState<Section[] | null>(null);

  useEffect(() => {
    setData([
      {
        heading: "üß© Contexte du challenge",
        content:
          "Ce challenge provient de la plateforme Root.me, qui propose des exercices de type CTF (Capture The Flag). Dans l‚Äô√©preuve 'HTML CAN STOP YOU', le formulaire de validation est rendu inutilisable... du moins en apparence.",
        items: [
          {
            title: "Nom du challenge",
            description: "HTML CAN STOP YOU ‚Äì cat√©gorie Web-Client",
          },
          {
            title: "Objectif",
            description:
              "Soumettre un formulaire dont les champs sont d√©sactiv√©s via des attributs HTML.",
          },
          {
            title: "Comp√©tences vis√©es",
            description:
              "Inspection DOM, compr√©hension des restrictions client-side, interaction via la console JavaScript.",
          },
        ],
      },
      {
        heading: "üîç Analyse technique",
        content:
          "En inspectant le code source de la page, on constate que les champs de saisie (input texte + bouton submit) poss√®dent l‚Äôattribut `disabled`, les rendant inaccessibles depuis l‚Äôinterface graphique. Cette barri√®re est purement c√¥t√© client : le navigateur interdit l‚Äôinteraction, mais rien n‚Äôemp√™che l‚Äôutilisateur de modifier le DOM.",
        items: [
          {
            title: "√âtape 1 ‚Äì Inspection",
            description:
              "J‚Äôai ouvert les outils d√©veloppeur (clic droit ‚Üí Inspecter ou F12) pour observer la structure HTML du formulaire.",
          },
          {
            title: "√âtape 2 ‚Äì Suppression des attributs",
            description:
              "Dans l‚Äôonglet Console, j‚Äôai utilis√© `document.querySelector()` pour cibler les champs, puis j‚Äôai supprim√© les attributs `disabled` via `.removeAttribute('disabled')`.",
          },
          {
            title: "√âtape 3 ‚Äì Soumission",
            description:
              "Une fois les √©l√©ments d√©verrouill√©s, j‚Äôai pu remplir le champ texte avec la bonne valeur et cliquer sur le bouton pour valider le challenge.",
          },
        ],
      },
      {
        heading: "üéì Enseignements",
        content:
          "Ce challenge d√©montre que les protections c√¥t√© client ne suffisent jamais √† garantir la s√©curit√©. Toute restriction impl√©ment√©e en HTML ou JavaScript peut √™tre contourn√©e si elle n‚Äôest pas doubl√©e d‚Äôun contr√¥le c√¥t√© serveur.",
        items: [
          {
            title: "Comprendre le r√¥le du DOM",
            description:
              "Le DOM (Document Object Model) peut √™tre manipul√© √† volont√© depuis la console. Ce challenge en est une d√©monstration claire.",
          },
          {
            title: "Ne jamais se fier au frontend",
            description:
              "Les attributs HTML comme `disabled`, `readonly`, ou les validations de formulaire sont utiles pour l‚ÄôUX, mais inutiles pour la s√©curit√© r√©elle.",
          },
          {
            title: "Apprendre √† penser comme un attaquant",
            description:
              "Inspecter, tester, modifier... ce genre d'exercice pousse √† explorer les failles les plus courantes dans les interfaces web.",
          },
        ],
      },
    ]);
  }, []);

  if (!data) return <p className="text-center py-10">Chargement...</p>;

  return (
    <main className="min-h-screen bg-gray-100 text-gray-800">
      <div className="max-w-4xl mx-auto px-6 py-12">
        <h1 className="text-4xl font-bold mb-2 text-blue-900">
          Root.me : HTML CAN STOP YOU
        </h1>
        <p className="text-sm text-gray-500 mb-6">
          R√©solution d‚Äôun challenge web de type CTF bas√© sur la manipulation du
          DOM dans le navigateur
        </p>

        {/* Image 1 */}
        <div className="relative w-full h-[400px] mb-8">
          <Image
            src="/html-can-stop-you/pic-1.png" // ‚Üê Remplace ici par ton lien
            alt="Formulaire d√©sactiv√© initialement"
            fill
            className="object-contain"
          />
        </div>

        {data.map((section, i) => (
          <section key={i} className="mb-12">
            <h2 className="text-2xl font-semibold text-blue-700 mb-3">
              {section.heading}
            </h2>
            <p className="mb-4 text-gray-700">{section.content}</p>
            <ul className="space-y-4">
              {section.items.map((item, j) => (
                <li
                  key={j}
                  className="bg-white shadow rounded p-4 border-l-4 border-blue-500"
                >
                  <h3 className="font-semibold text-lg">{item.title}</h3>
                  <p className="text-gray-600">{item.description}</p>
                </li>
              ))}
            </ul>

            {/* Images additionnelles √† ins√©rer apr√®s certaines sections */}
            {i === 1 && (
              <div className="relative w-full h-[400px] my-6">
                <Image
                  src="/html-can-stop-you/pic-2.png" // ‚Üê Remplace ici par ton lien
                  alt="Console avec les commandes JavaScript"
                  fill
                  className="object-contain"
                />
              </div>
            )}
          </section>
        ))}

        <footer className="mt-10 text-center text-gray-400 text-sm">
          ¬© {new Date().getFullYear()} Mon Blog.
        </footer>
      </div>
    </main>
  );
}
