"use client";

import { useEffect, useState } from "react";
import Image from "next/image";

type Section = {
  heading: string;
  content: string;
  items: { title: string; description: string }[];
};

export default function Authentification() {
  const [data, setData] = useState<Section[] | null>(null);

  useEffect(() => {
    setData([
      {
        heading: "üîê Pr√©sentation du challenge",
        content:
          "Ce challenge de la cat√©gorie Web Client sur Root.me proposait un formulaire classique de connexion avec un champ login et un champ mot de passe. Rien d‚Äôexceptionnel en apparence‚Ä¶ mais toute la logique de validation √©tait visible dans un fichier JavaScript.",
        items: [
          {
            title: "Nom du challenge",
            description: "AUTHENTIFICATION ‚Äì Web Client",
          },
          {
            title: "But",
            description:
              "Trouver la bonne combinaison identifiant / mot de passe pour valider le formulaire.",
          },
          {
            title: "Difficult√©",
            description:
              "Faible ‚Äì repose sur l‚Äôanalyse directe du code source JavaScript.",
          },
        ],
      },
      {
        heading: "üß† Analyse du code source",
        content:
          "Dans le fichier JavaScript inclus, une variable contenait une cha√Æne de type `username:password`. Le script utilisait la m√©thode `.split(':')` pour s√©parer les deux, puis les comparait aux champs saisis par l‚Äôutilisateur.",
        items: [
          {
            title: "Extraction",
            description:
              'La ligne ressemblait √† `var TheLists = ["GOD:HIDDEN"]`, et un script d√©coupait la cha√Æne pour obtenir login et password.',
          },
          {
            title: "Validation",
            description:
              "Un `if` v√©rifiait que les valeurs saisies correspondaient exactement √† celles du tableau. Si oui, une alerte affichait un message de r√©ussite.",
          },
          {
            title: "Bypass",
            description:
              "En lisant le script, j‚Äôai directement r√©cup√©r√© les identifiants et les ai utilis√©s dans le formulaire. R√©sultat : challenge valid√© sans bruteforce ni interception.",
          },
        ],
      },
      {
        heading: "‚úÖ Conclusion",
        content:
          "Ce type de challenge d√©montre √† quel point il est facile de contourner un syst√®me d‚Äôauthentification s‚Äôil repose uniquement sur du code visible c√¥t√© client. La s√©curit√© ne doit jamais √™tre bas√©e sur l‚Äôobscurcissement ou le masquage.",
        items: [
          {
            title: "Mot de passe en clair = danger",
            description:
              "Le simple fait de stocker une cha√Æne `user:pass` c√¥t√© client permet √† n‚Äôimporte qui de la lire.",
          },
          {
            title: "Split + v√©rif = trop simple",
            description:
              "Un syst√®me de validation bas√© uniquement sur `.split()` et une comparaison directe est totalement trivial √† contourner.",
          },
          {
            title: "√Ä retenir",
            description:
              "Inspecter les fichiers JS est souvent suffisant pour r√©soudre des challenges simples ‚Äì mais cela montre aussi les failles r√©elles qu‚Äôon trouve dans des projets mal s√©curis√©s.",
          },
        ],
      },
    ]);
  }, []);

  if (!data) return <p className="text-center py-10">Chargement...</p>;

  return (
    <main className="min-h-screen bg-gray-100 text-gray-800">
      <div className="max-w-4xl mx-auto px-6 py-12">
        <h1 className="text-4xl font-bold mb-2 text-blue-900">
          AUTHENTIFICATION ‚Äì Cat√©gorie Web Client
        </h1>
        <p className="text-sm text-gray-500 mb-6">
          Retour sur un challenge de CTF Root.me o√π toute la logique
          d‚Äôauthentification √©tait cod√©e en dur dans le JavaScript.
        </p>

        {/* Image principale */}
        <div className="relative w-full h-[400px] mb-8">
          <Image
            src="/authentification/pic-1.png" // ‚Üê Remplace par ton image
            alt="Code JS avec username:password en dur"
            fill
            className="object-contain"
          />
        </div>

        {data.map((section, i) => (
          <section key={i} className="mb-12">
            <h2 className="text-2xl font-semibold text-blue-700 mb-3">
              {section.heading}
            </h2>
            <p className="mb-4 text-gray-700">{section.content}</p>
            <ul className="space-y-4">
              {section.items.map((item, j) => (
                <li
                  key={j}
                  className="bg-white shadow rounded p-4 border-l-4 border-blue-500"
                >
                  <h3 className="font-semibold text-lg">{item.title}</h3>
                  <p className="text-gray-600">{item.description}</p>
                </li>
              ))}
            </ul>
          </section>
        ))}

        <footer className="mt-10 text-center text-gray-400 text-sm">
          ¬© {new Date().getFullYear()} Mon Blog.
        </footer>
      </div>
    </main>
  );
}
